// Generated by the WOLips Templateengine Plug-in at 17 sept. 2010 15:56:38

/*******************************************************************************
 *  Copyright CONSORTIUM COCKTAIL (www.cocktail.org), 1995, 2008
 *  
 *  This software is governed by the CeCILL license under French law and abiding
 *  by the rules of distribution of free software. You can use, modify and/or
 *  redistribute the software under the terms of the CeCILL license as circulated
 *  by CEA, CNRS and INRIA at the following URL "http://www.cecill.info".
 *  
 *  As a counterpart to the access to the source code and rights to copy, modify
 *  and redistribute granted by the license, users are provided only with a
 *  limited warranty and the software's author, the holder of the economic
 *  rights, and the successive licensors have only limited liability.
 *  
 *  In this respect, the user's attention is drawn to the risks associated with
 *  loading, using, modifying and/or developing or reproducing the software by
 *  the user in light of its specific status of free software, that may mean that
 *  it is complicated to manipulate, and that also therefore means that it is
 *  reserved for developers and experienced professionals having in-depth
 *  computer knowledge. Users are therefore encouraged to load and test the
 *  software's suitability as regards their requirements in conditions enabling
 *  the security of their systems and/or data to be ensured and, more generally,
 *  to use and operate it in the same conditions as regards security.
 *  
 *  The fact that you are presently reading this means that you have had
 *  knowledge of the CeCILL license and that you accept its terms.
 * 
 *******************************************************************************/

package org.cocktail.superplaner.serveur.components;

import org.cocktail.fwkcktlpersonne.common.metier.IPersonne;
import org.cocktail.scolaritefwk.serveur.metier.eos.EOScolFormationAnnee;
import org.cocktail.scolaritefwk.serveur.metier.eos.EOScolMaquetteSemestre;
import org.cocktail.scolaritemodulesfwk.serveur.components.DiplomePickerDefaultDelegate;
import org.cocktail.superplaner.serveur.DBHandler;
import org.cocktail.superplaner.serveur.Session;
import org.cocktail.superplaner.serveur.SuperPlanERApplicationUser;
import org.cocktail.superplaner.serveur.components.controlers.AccueilCtrl;

import com.webobjects.appserver.WOActionResults;
import com.webobjects.appserver.WOContext;
import com.webobjects.eoaccess.EOEntity;
import com.webobjects.eoaccess.EOSQLQualifier;
import com.webobjects.eoaccess.EOUtilities;
import com.webobjects.eocontrol.EOQualifier;
import com.webobjects.foundation.NSArray;

import er.ajax.AjaxModalDialog;
import er.ajax.CktlAjaxModalDialog;

public class Accueil extends MyWOComponent {
    
	private static final long serialVersionUID = 1L;

	private AccueilCtrl ctrl;

	private String searchTypeIntExt = "interne";
	private String searchTypePhysMoral = "individu";
	private Integer numero;

	private Boolean isOpenFenetreException = Boolean.FALSE;
	private boolean isInSearch;
	private boolean isInPicker;
	private DiplomePickerDefaultDelegate delegate;
	private EOScolFormationAnnee annee;
	private NSArray<String> lstRefreshSearchZones = new NSArray<String>(new String[] {"aucSearch"});
	private IPersonne selectedSearchPersonne;
	private EOScolMaquetteSemestre selectedSearchSemestre;
	
	public Accueil(WOContext context) {
        super(context);
        ctrl = new AccueilCtrl(this);
        setCtrl(ctrl);
        
        EOQualifier qual = EOQualifier.qualifierWithQualifierFormat(EOScolFormationAnnee.FANN_COURANTE_KEY + " = %@"
				, new NSArray(new Object[] { "O" }));

		annee = (EOScolFormationAnnee) DBHandler.fetchData(session().defaultEditingContext(), EOScolFormationAnnee.ENTITY_NAME, qual).get(0);
//		planCtrl = new PlanningCtrl(session.defaultEditingContext());
		delegate = new DiplomePickerDefaultDelegate(session().defaultEditingContext(), annee);

    }

	public WOActionResults selectEvent() {
		return null;
	}

	public boolean isCreerDisabled() {
		boolean isCreerDisabled = false;
		// TODO Ajouter le code correspondant
		
		return isCreerDisabled;
	}
	
	public WOActionResults rechercheAvancee() {
		// TODO Ajouter le code pour renvoyer la page de recherche avancee
		return null;
	}

	public WOActionResults valider() {
//		CktlAjaxModalDialog.close(context(), "ChoixGroupes");
		CktlAjaxModalDialog.close(context());
		return null;
	}
	
	/**
	 * @return the ctrl
	 */
	public AccueilCtrl ctrl() {
		return ctrl;
	}

	/**
	 * @param ctrl the ctrl to set
	 */
	public void setCtrl(AccueilCtrl ctrl) {
		this.ctrl = ctrl;
	}

	/**
	 * @return the numero
	 */
	public Integer numero() {
		return numero;
	}

	/**
	 * @param numero the numero to set
	 */
	public void setNumero(Integer numero) {
		this.numero = numero;
	}

	/**
	 * @return the isOpenFenetreException
	 */
	public Boolean isOpenFenetreException() {
		return isOpenFenetreException;
	}
	
	/**
	 * @param isOpenFenetreException the isOpenFenetreException to set
	 */
	public void setIsOpenFenetreException(Boolean isOpenFenetreException) {
		this.isOpenFenetreException = isOpenFenetreException;
	}


	public WOActionResults chooseGroups() {
		return null;
	}

	public WOActionResults selectFromSearch() {
		((Session) session()).setSelectedPersonne(selectedSearchPersonne());
		return pageWithName(Accueil.class.getName());
	}

	public WOActionResults selectFromPicker() {
		((Session) session()).setSelectedFormation(getSelectedSearchSemestre());
		return pageWithName(Accueil.class.getName());
	}

	public SuperPlanERApplicationUser getPUser() {
		return ((Session) session()).applicationUser();
	}

	/**
	 * @return the searchTypeIntExt
	 */
	public String searchTypeIntExt() {
		return searchTypeIntExt;
	}

	/**
	 * @param searchTypeIntExt
	 *            the searchTypeIntExt to set
	 */
	public void setSearchTypeIntExt(String searchTypeIntExt) {
		this.searchTypeIntExt = searchTypeIntExt;
	}

	/**
	 * @return the searchTypePhysMoral
	 */
	public String searchTypePhysMoral() {
		return searchTypePhysMoral;
	}

	/**
	 * @param searchTypePhysMoral
	 *            the searchTypePhysMoral to set
	 */
	public void setSearchTypePhysMoral(String searchTypePhysMoral) {
		this.searchTypePhysMoral = searchTypePhysMoral;
	}

	public WOActionResults openSearch() {
		edc.invalidateAllObjects();
		AjaxModalDialog.open(context(), "amdSearch", "Recherche ...");
		setInSearch(true);
		return null;
	}
	
	public WOActionResults openDiplomePicker() {
		edc.invalidateAllObjects();
		AjaxModalDialog.open(context(), "amdPicker", "Selectionner ...");
		setInPicker(true);
		return null;
	}


	public WOActionResults onCloseSearch() {
		setInSearch(false);

		return null;
	}


	public WOActionResults onClosePicker() {
		setInPicker(false);

		return null;
	}

	/**
	 * @return the isInSearch
	 */
	public boolean isInSearch() {
		return isInSearch;
	}

	/**
	 * @param isInSearch
	 *            the isInSearch to set
	 */
	public void setInSearch(boolean isInSearch) {
		this.isInSearch = isInSearch;
	}

	public boolean isInPicker() {
		return isInPicker;
	}

	public void setInPicker(boolean isInPicker) {
		this.isInPicker = isInPicker;
	}

	/**
	 * @return the annee
	 */
	public EOScolFormationAnnee annee() {
		return annee;
	}
	/**
	 * @param annee the annee to set
	 */
	public void setAnnee(EOScolFormationAnnee annee) {
		this.annee = annee;
	}

	public DiplomePickerDefaultDelegate getDelegate() {
		return delegate;
	}

	public void setDelegate(DiplomePickerDefaultDelegate delegate) {
		this.delegate = delegate;
	}

	public EOScolMaquetteSemestre getSelectedSearchSemestre() {
		return selectedSearchSemestre;
	}

	public void setSelectedSearchSemestre(
			EOScolMaquetteSemestre selectedSearchSemestre) {
		this.selectedSearchSemestre = selectedSearchSemestre;
	}
	
	public String selectedSearchSemestreToString() {
		return "semestre " + selectedSearchSemestre.msemOrdre();
	}

	public String aucTriggerSearchId() {

		return getComponentId() + "_aucTriggerSearchId";
	}

	/**
	 * @return the lstRefreshSearchZones
	 */
	public NSArray<String> lstRefreshSearchZones() {
		return lstRefreshSearchZones;
	}

	/**
	 * @param lstRefreshSearchZones
	 *            the lstRefreshSearchZones to set
	 */
	public void setLstRefreshSearchZones(NSArray<String> lstRefreshSearchZones) {
		this.lstRefreshSearchZones = lstRefreshSearchZones;
	}

	public String aucselpersonneid() {
		return getComponentId() + "_aucselpersonneid";
	}
	public String aucselfhabid() {
		return getComponentId() + "_aucselfhabid";
	}

	/**
	 * @return the selectedSearchPersonne
	 */
	public IPersonne selectedSearchPersonne() {
		return selectedSearchPersonne;
	}

	/**
	 * @param selectedSearchPersonne
	 *            the selectedSearchPersonne to set
	 */
	public void setSelectedSearchPersonne(IPersonne selectedSearchPersonne) {
		this.selectedSearchPersonne = selectedSearchPersonne;
	}


	public EOQualifier qualifier() {
		EOEntity individu = EOUtilities.entityNamed(edc,"IndividuUlr");
		String[] param = {session.applicationUser().getLogin()};
		return new EOSQLQualifier(individu, "pers_id in (select distinct(sie.pers_id) " +
				"from SCOLARITE.SCOL_DROIT_LOGIN dlog, SCOLARITE.SCOL_DROIT_DIPLOME ddip, SCOLARITE.scol_formation_habilitation fhab, SCOLARITE.scol_inscription_etudiant sie " +
				"where dlog.dlog_login = '%@' and ddip.dlog_key = dlog.dlog_key and fhab.fhab_key = ddip.fhab_key and sie.fspn_key = fhab.fspn_key and ddip.fann_key = sie.fann_key)", param);
	}
}